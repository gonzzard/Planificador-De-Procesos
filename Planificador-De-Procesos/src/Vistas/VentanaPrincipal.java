package Vistas;

import Algoritmos.Algoritmo;
import Utils.Constantes;
import Algoritmos.Implementacion.FIFS;
import Procesos.Proceso;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.image.BufferedImage;
import java.awt.image.ColorModel;
import java.awt.image.WritableRaster;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Gonzalo
 */
public class VentanaPrincipal extends javax.swing.JFrame
{
    private int idProceso;

    protected List<Proceso> procesos;

    private Boolean FIFS;

    private Algoritmo algoritmo;

    public DefaultTableModel model, modelCola;

    public BufferedImage bufferPanelGantt, vacio;
    
    protected Graphics2D graficaPanel, graficaBuffer;

    /**
     * Creates new form NewJFrame
     */
    public VentanaPrincipal()
    {
        // Inicialización de los componentes del frame
        initComponents();

        // Inicialización de procesos
        this.idProceso = 1;
        this.procesos = new ArrayList<>();

        // Inicialización de los modelos de las tablas
        this.model = (DefaultTableModel) tablaProcesos.getModel();
        this.modelCola = (DefaultTableModel) tblColaProcesos.getModel();

        // Inicialización de botones
        this.btnListo.setEnabled(false);
        this.btnPasoSiguiente.setEnabled(false);
        this.btnSimular.setEnabled(false);
        
        int ancho = panelGantt.getWidth();
        int alto = panelGantt.getHeight();

        bufferPanelGantt = (BufferedImage) panelGantt.createImage(ancho, alto);
        vacio = copiarBuffer(bufferPanelGantt);
        Graphics2D g3 = bufferPanelGantt.createGraphics();
        g3.setColor(Color.white);
        g3.fillRect(0, 0, ancho, alto);
        graficaPanel = (Graphics2D) panelGantt.getGraphics();
        graficaBuffer = (Graphics2D) bufferPanelGantt.getGraphics();
        
        graficaPanel.drawImage(bufferPanelGantt, 0, 0, null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaProcesos = new javax.swing.JTable();
        panelGantt = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        btnSimular = new javax.swing.JButton();
        btnAniadirProceso = new javax.swing.JButton();
        chxFIFS = new javax.swing.JCheckBox();
        chxSJF = new javax.swing.JCheckBox();
        chxRR = new javax.swing.JCheckBox();
        btnPasoSiguiente = new javax.swing.JButton();
        btnListo = new javax.swing.JButton();
        pbProceso1 = new javax.swing.JProgressBar();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblColaProcesos1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblColaProcesos = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Simulador planificador de procesos");
        setMinimumSize(new java.awt.Dimension(1100, 650));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tablaProcesos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "Id", "Llegada", "CPU1", "E/S", "CPU2", "Prioridad"
            }
        )
        {
            Class[] types = new Class []
            {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean []
            {
                false, true, true, true, true, true
            };

            public Class getColumnClass(int columnIndex)
            {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        tablaProcesos.setToolTipText("");
        tablaProcesos.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tablaProcesos.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tablaProcesos);
        if (tablaProcesos.getColumnModel().getColumnCount() > 0)
        {
            tablaProcesos.getColumnModel().getColumn(0).setResizable(false);
            tablaProcesos.getColumnModel().getColumn(1).setResizable(false);
            tablaProcesos.getColumnModel().getColumn(2).setResizable(false);
            tablaProcesos.getColumnModel().getColumn(3).setResizable(false);
            tablaProcesos.getColumnModel().getColumn(4).setResizable(false);
            tablaProcesos.getColumnModel().getColumn(5).setResizable(false);
        }

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 626, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, -1, -1));

        panelGantt.setBackground(new java.awt.Color(255, 255, 255));
        panelGantt.setMaximumSize(new java.awt.Dimension(1005, 150));
        panelGantt.setMinimumSize(new java.awt.Dimension(1005, 150));
        panelGantt.setPreferredSize(new java.awt.Dimension(1020, 150));
        panelGantt.addContainerListener(new java.awt.event.ContainerAdapter()
        {
            public void componentAdded(java.awt.event.ContainerEvent evt)
            {
                panelGanttComponentAdded(evt);
            }
        });
        panelGantt.addComponentListener(new java.awt.event.ComponentAdapter()
        {
            public void componentShown(java.awt.event.ComponentEvent evt)
            {
                panelGanttComponentShown(evt);
            }
        });

        javax.swing.GroupLayout panelGanttLayout = new javax.swing.GroupLayout(panelGantt);
        panelGantt.setLayout(panelGanttLayout);
        panelGanttLayout.setHorizontalGroup(
            panelGanttLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1040, Short.MAX_VALUE)
        );
        panelGanttLayout.setVerticalGroup(
            panelGanttLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 240, Short.MAX_VALUE)
        );

        getContentPane().add(panelGantt, new org.netbeans.lib.awtextra.AbsoluteConstraints(7, 298, 1040, 240));
        panelGantt.getAccessibleContext().setAccessibleName("");

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnSimular.setText("Simular");
        btnSimular.setMaximumSize(new java.awt.Dimension(138, 29));
        btnSimular.setMinimumSize(new java.awt.Dimension(138, 29));
        btnSimular.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mousePressed(java.awt.event.MouseEvent evt)
            {
                btnSimularMousePressed(evt);
            }
        });

        btnAniadirProceso.setText("Añadir Proceso");
        btnAniadirProceso.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mousePressed(java.awt.event.MouseEvent evt)
            {
                btnAniadirProcesoMousePressed(evt);
            }
        });

        chxFIFS.setText("FIFS");
        chxFIFS.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mousePressed(java.awt.event.MouseEvent evt)
            {
                chxFIFSMousePressed(evt);
            }
        });

        chxSJF.setText("SJF");
        chxSJF.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mousePressed(java.awt.event.MouseEvent evt)
            {
                chxSJFMousePressed(evt);
            }
        });

        chxRR.setText("RR");
        chxRR.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mousePressed(java.awt.event.MouseEvent evt)
            {
                chxRRMousePressed(evt);
            }
        });

        btnPasoSiguiente.setText("Paso Siguiente");
        btnPasoSiguiente.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mousePressed(java.awt.event.MouseEvent evt)
            {
                btnPasoSiguienteMousePressed(evt);
            }
        });

        btnListo.setText("Listo");
        btnListo.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnListoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnAniadirProceso, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnListo))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(chxFIFS)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chxSJF))
                            .addComponent(btnSimular, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnPasoSiguiente, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chxRR))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pbProceso1, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnAniadirProceso)
                        .addComponent(btnListo))
                    .addComponent(pbProceso1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chxFIFS)
                    .addComponent(chxSJF)
                    .addComponent(chxRR))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPasoSiguiente)
                    .addComponent(btnSimular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(641, 6, -1, 102));

        tblColaProcesos1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "Puesto", "Id Proceso", "Prioridad", "Color"
            }
        )
        {
            Class[] types = new Class []
            {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean []
            {
                false, false, true, false
            };

            public Class getColumnClass(int columnIndex)
            {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblColaProcesos1);
        if (tblColaProcesos1.getColumnModel().getColumnCount() > 0)
        {
            tblColaProcesos1.getColumnModel().getColumn(0).setResizable(false);
            tblColaProcesos1.getColumnModel().getColumn(1).setResizable(false);
            tblColaProcesos1.getColumnModel().getColumn(2).setResizable(false);
            tblColaProcesos1.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 367, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(641, 114, 367, -1));

        tblColaProcesos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "Puesto", "Id Proceso", "Prioridad", "Color"
            }
        )
        {
            Class[] types = new Class []
            {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean []
            {
                false, false, true, false
            };

            public Class getColumnClass(int columnIndex)
            {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblColaProcesos);
        if (tblColaProcesos.getColumnModel().getColumnCount() > 0)
        {
            tblColaProcesos.getColumnModel().getColumn(0).setResizable(false);
            tblColaProcesos.getColumnModel().getColumn(1).setResizable(false);
            tblColaProcesos.getColumnModel().getColumn(2).setResizable(false);
            tblColaProcesos.getColumnModel().getColumn(3).setResizable(false);
        }

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 135, 629, 148));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAniadirProcesoMousePressed(java.awt.event.MouseEvent evt)//GEN-FIRST:event_btnAniadirProcesoMousePressed
    {//GEN-HEADEREND:event_btnAniadirProcesoMousePressed
        this.prepararDiagramaGantt();
        
        if (idProceso != 6)
        {
            model.addRow(new Object[]
        {
            idProceso, 0, 1, 0, 0, 1
        });
        idProceso++;
        btnListo.setEnabled(true);
        }
    }//GEN-LAST:event_btnAniadirProcesoMousePressed

    private void btnSimularMousePressed(java.awt.event.MouseEvent evt)//GEN-FIRST:event_btnSimularMousePressed
    {//GEN-HEADEREND:event_btnSimularMousePressed
        algoritmo.run(1);
        btnPasoSiguiente.setEnabled(false);
        btnSimular.setEnabled(false);
    }//GEN-LAST:event_btnSimularMousePressed

    private void btnPasoSiguienteMousePressed(java.awt.event.MouseEvent evt)//GEN-FIRST:event_btnPasoSiguienteMousePressed
    {//GEN-HEADEREND:event_btnPasoSiguienteMousePressed
        if (algoritmo.PasoSiguiente())
        {
            btnPasoSiguiente.setEnabled(false);
            btnSimular.setEnabled(false);
        }
    }//GEN-LAST:event_btnPasoSiguienteMousePressed

    private void btnListoActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnListoActionPerformed
    {//GEN-HEADEREND:event_btnListoActionPerformed
        btnAniadirProceso.setEnabled(false);
        btnListo.setEnabled(false);
        btnSimular.setEnabled(true);
        btnPasoSiguiente.setEnabled(true);
        tablaProcesos.setEnabled(false);
        tblColaProcesos.setEnabled(false);
        chxFIFS.setEnabled(false);
        chxRR.setEnabled(false);
        chxSJF.setEnabled(false);
        añadirProcesosDesdeTabla();
        volcarProcesosEnCola();
        algoritmo = new FIFS(procesos, tblColaProcesos, graficaPanel, graficaBuffer, bufferPanelGantt);
    }//GEN-LAST:event_btnListoActionPerformed

    private void chxFIFSMousePressed(java.awt.event.MouseEvent evt)//GEN-FIRST:event_chxFIFSMousePressed
    {//GEN-HEADEREND:event_chxFIFSMousePressed
        chxRR.setSelected(false);
        chxSJF.setSelected(false);
    }//GEN-LAST:event_chxFIFSMousePressed

    private void chxSJFMousePressed(java.awt.event.MouseEvent evt)//GEN-FIRST:event_chxSJFMousePressed
    {//GEN-HEADEREND:event_chxSJFMousePressed
        chxFIFS.setSelected(false);
        chxRR.setSelected(false);
    }//GEN-LAST:event_chxSJFMousePressed

    private void chxRRMousePressed(java.awt.event.MouseEvent evt)//GEN-FIRST:event_chxRRMousePressed
    {//GEN-HEADEREND:event_chxRRMousePressed
        chxFIFS.setSelected(false);
        chxSJF.setSelected(false);
    }//GEN-LAST:event_chxRRMousePressed

    private void panelGanttComponentAdded(java.awt.event.ContainerEvent evt)//GEN-FIRST:event_panelGanttComponentAdded
    {//GEN-HEADEREND:event_panelGanttComponentAdded
              this.prepararDiagramaGantt();
    }//GEN-LAST:event_panelGanttComponentAdded

    private void panelGanttComponentShown(java.awt.event.ComponentEvent evt)//GEN-FIRST:event_panelGanttComponentShown
    {//GEN-HEADEREND:event_panelGanttComponentShown
              this.prepararDiagramaGantt();
    }//GEN-LAST:event_panelGanttComponentShown

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            @Override
            public void run()
            {
                new VentanaPrincipal().setVisible(true);
            }
        });
        
        
    }

    private void añadirProcesosDesdeTabla()
    {
        for (int i = 0; i < tablaProcesos.getRowCount(); i++)
        {
            procesos.add(new Proceso((int) tablaProcesos.getValueAt(i, 0),
                    (int) tablaProcesos.getValueAt(i, 1),
                    (int) tablaProcesos.getValueAt(i, 2),
                    (int) tablaProcesos.getValueAt(i, 3),
                    (int) tablaProcesos.getValueAt(i, 4),
                    (int) tablaProcesos.getValueAt(i, 5),
                    pbProceso1));
        }
    }

    private void volcarProcesosEnCola()
    {
        Iterator iterador = procesos.iterator();
        int i = 1;
        while (iterador.hasNext())
        {
            Proceso current = (Proceso) iterador.next();
            modelCola.addRow(new Object[]
            {
                i, current.id, current.prioridad, "1"
            });
            i++;
        }
    }

    private void prepararDiagramaGantt()
    {
        int factorX = panelGantt.getHeight() / 6;
        int factorY = panelGantt.getWidth() / 50;

        for (int i = 0; i < 7; i++)
        {
            graficaBuffer.drawLine(0, factorX * i, panelGantt.getWidth(), factorX * i);
        }

        graficaBuffer.drawLine(0, panelGantt.getHeight() - 1, panelGantt.getWidth(), panelGantt.getHeight() - 1);

        for (int i = 0; i < 51; i++)
        {
            graficaBuffer.drawLine(factorY * i + 40, 0, factorY * i + 40, panelGantt.getHeight());

        }

        graficaBuffer.drawLine(0, 0, 0, panelGantt.getHeight());

        for (int i = 0; i < 50; i++)
        {
            graficaBuffer.drawString((i / 10) + "", 46 + (factorY * i), 17);
            graficaBuffer.drawString((i % 10) + "", 46 + (factorY * i), 34);
        }

        graficaBuffer.drawLine(panelGantt.getWidth() - 1, 0, panelGantt.getWidth() - 1, panelGantt.getHeight());
        
        
        graficaBuffer.drawLine(0, 0, 40, 40);
        
        graficaPanel.drawImage(bufferPanelGantt, 0, 0, null);
    }
    
    public BufferedImage copiarBuffer(BufferedImage buffer)
    {
        ColorModel cm = buffer.getColorModel();
        boolean isAlphaPremultiplied = cm.isAlphaPremultiplied();
        WritableRaster raster = buffer.copyData(null);
        return new BufferedImage(cm, raster, isAlphaPremultiplied, null);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAniadirProceso;
    private javax.swing.JButton btnListo;
    private javax.swing.JButton btnPasoSiguiente;
    private javax.swing.JButton btnSimular;
    private javax.swing.JCheckBox chxFIFS;
    private javax.swing.JCheckBox chxRR;
    private javax.swing.JCheckBox chxSJF;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPanel panelGantt;
    private javax.swing.JProgressBar pbProceso1;
    private javax.swing.JTable tablaProcesos;
    private javax.swing.JTable tblColaProcesos;
    private javax.swing.JTable tblColaProcesos1;
    // End of variables declaration//GEN-END:variables
}
